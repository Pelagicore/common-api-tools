GENIVI_org.genivi.commonapi.core.verification
======================
:Author: Juergen Gehring - juergen.gehring@bmw.de, Manfred Bathelt - manfred.bathelt@bmw.de
:doctitle: GENIVI_org.genivi.commonapi.core.verification

Copyright
---------
Copyright (C) 2013, GENIVI Alliance, Inc.
Copyright (C) 2013, BMW AG

This file is part of GENIVI Project IPC Common API.
 
Contributions are licensed to the GENIVI Alliance under one or more
Contribution License Agreements or MPL 2.0 .
 
(C) Copyright
This Source Code Form is subject to the terms of the
Mozilla Public License, v. 2.0. If a  copy of the MPL was not distributed with
this file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
For further information see https://collab.genivi.org/wiki/display/genivi/SysInfraEGCommonIDLCommonAPIGuide

== License
This project is licensed under MPL 2.0

Contribution is done under GENIVI CLA or MPL2.0. 

== Version
The current version can be taken from the git.

== Description

The term "gluecode" refers to a binary that contains the binding specific generated code from the Franca files
"test-derived-types.fidl", "test-interface-proxy.fidl" and "test-predefined-types.fidl" that are delivered in the
src directory within that project. The gluecode library needs to contain the generated proxy and stub files (Common-API as well as binding specific ones) from
the three .fidl files mentioned above.

There are some configure options that allow you to define the binding that should be tested:

--with-gluecode=... specifies the path to your gluecode libraries, including name, excluding file ending; .a and .so files with
the given name will be used.
--with-binding-name=... specifies the "well-known" name for the binding to be tested. This is the name which may be used to
dynamically load the binding.
--with-binding=... specifies the path to the binding library, including name, excluding file ending; .a and .so files with
the given name will be used.

If your binding needs additional libraries, use --binding-extra=... to specify them.

GTest is needed to compile and run the test. Its confuguration script location must be available 
in the environment variable GTEST_CONFIG. 

== Usage

1. Generate CommonAPI code for alll .fidl files within /src using the code generator. After that you should find the generated files in /src-gen
2. Run autoreconf -i
3. Configure the project to find the gluecode (see also "Description")
Ensure you have GTEST_CONFIG set to the correct location, e.g. GTEST_CONFIG=/home/user/work/gtest/scripts/gtest-config 
   Examples:
   configure --with-gluecode=/home/user/CommonAPI-D-Bus-Tools/org.genivi.commonapi.dbus.verification/.libs/libDBusGlue \
             --with-binding-name=DBus \
             --with-binding=/home/user/CommonAPI-D-Bus/.libs/libCommonAPI-DBus
             --with-binding-extra=/home/user/dbus-1.4.16/dbus/.libs/libdbus-1.so   
   If you do not need extra libraries, you can omit the --with-binding-extra option
4. Run make check (Ensure that any additional .so which may be required can be found, for example by setting the LD_LIBRARY_PATH variable)
5. Execute ./verification in order to run the test cases once again
   